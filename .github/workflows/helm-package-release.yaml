# Ref: https://github.com/bitnami/charts/blob/main/.github/workflows/generate-chart-readme.yml
name: '[HELM] Package and release'
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'charts/**/**.yaml'
      - 'charts/**/**.tpl'
      - 'charts/**/**.txt'
permissions:
  contents: write
jobs:
  package-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.SOFTWARE_APP_ID }}
          private_key: ${{ secrets.SOFTWARE_APP_PRIVATE_KEY }}
          installation_id: ${{ secrets.SOFTWARE_APP_INSTALLATION_ID }}
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
          fetch-depth: 0
          persist-credentials: true
          path: luminartech/helm-charts-public
      - name: Helm Repository Checkout
        uses: actions/checkout@v3
        with:
          repository: luminartech/helm-repo-public
          token: ${{ steps.generate_token.outputs.token }}
          fetch-depth: 0
          persist-credentials: true
          ref: main
          path: luminartech/helm-repo-public
      - name: Helm Installation
        uses: azure/setup-helm@v3
        with:
          version: v3.10.3
      - name: Build helm packages and push tags
        env:
          token: ${{ steps.generate_token.outputs.token }}
        run: |
          [[ "${SCRIPT_DEBUG}" == "1" ]] && set -x || true
          workspace_dir=$(pwd)
          cd luminartech/helm-charts-public
          git config user.name "CI Bot"
          git config user.email "sre@luminartech.com"
          # Adding || true to avoid "Process exited with code 1" errors
          # Using the Github API to detect the files changed as git merge-base stops working when the branch is behind
          # and jitterbit/get-changed-files does not support pull_request_target
          URL="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files"
          files_changed_data=$(curl -s --header 'authorization: Bearer ${{ secrets.token }}' -X GET -G "$URL")
          files_changed="$(echo $files_changed_data | jq -r '.[] | .filename')"
          charts_dirs_changed=($(echo "${files_changed}" | xargs dirname | tr ' ' '\n' | grep -e '^charts\/iac\/.*/' | sed -nr "s|charts/iac/([^/]*).*|charts/iac/\1|p" | sort | uniq || true))
          charts_dirs_changed+=($(echo "${files_changed}" | xargs dirname | tr ' ' '\n' | grep -e '^charts\/shared\/.*/' | sed -nr "s|charts/shared/([^/]*).*|charts/shared/\1|p" | uniq || true))
          charts_dirs_changed+=($(echo "${files_changed}" | xargs dirname | tr ' ' '\n' | grep -e '^charts\/modules\/apps\/.*/' | sed -nr "s|charts/modules/apps/([^/]*).*|charts/modules/apps/\1|p" | sort | uniq || true))
          charts_dirs_changed+=($(echo "${files_changed}" | xargs dirname | tr ' ' '\n' | grep -e '^charts\/modules\/iac\/.*/' | sed -nr "s|charts/modules/iac/([^/]*).*|charts/modules/iac/\1|p" | sort | uniq || true))
          for chart in "${charts_dirs_changed[@]}"; do
            cd ${chart}
            if [ -f Chart.yaml ]; then
              echo "Generating helm package for ${chart}"
              helm dependency update
              rm -f *.tgz || true
              helm package .
              chart_name=$(awk -F '[/]' '{print $NF}' <<< ${chart})
              chart_version=$(ls -t|grep -e '.*-.*\..*\.tgz'|sed 's/.tgz//'|awk -F '[-]' '{print $NF}')
              # this command should fail the job if tag already exists
              git tag rel-${chart_name}-${chart_version}
              git push -f origin rel-${chart_name}-${chart_version}
              # Do not force update, we want this job to fail if same version package exists
              mkdir -p ${workspace_dir}/luminartech/helm-repo-public/${chart_name}
              mv *.tgz "${workspace_dir}/luminartech/helm-repo-public/${chart_name}"
            else
              echo "WARN: Chart.yaml missing for ${chart}"
            fi
            cd -
          done
      - name: Push changes to helm repository
        run: |
          [[ "${SCRIPT_DEBUG}" == "1" ]] && set -x || true
          # Push all the changes
          cd luminartech/helm-repo-public
          if git status -s | grep -e '.*-.*\..*\.tgz'; then
            git config user.name "CI Bot"
            git config user.email "sre@luminartech.com"
            git add **.tgz
            git status
            git commit -am "[ CI Bot ] Generated helm packages" --signoff
            git push
          fi
